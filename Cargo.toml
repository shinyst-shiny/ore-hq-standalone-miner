[package]
name = "standalone-miner"
version = "0.0.1"
authors = ["Shiny <shinyst.shiny@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.99"
web-sys = { version = "0.3.76", features = ["Window", "Performance"] }
drillx_2 = "1.1.0"
console_log = "1.0.0"
js-sys = "0.3.76"
serde-wasm-bindgen = "0.6.5"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
log = "0.4.22"
serde = { version = "1.0.216", features = ["derive"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
debug = 0
lto = true
codegen-units = 1

[package.metadata.wasm-pack.profile.release]
features = ["wee_alloc"]

[target.wasm32-unknown-unknown]
rustflags = ["-C", "target-feature=+simd128"]